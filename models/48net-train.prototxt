name: "48*48Net"
layer {
  name: "data"
  type: "Input"
  top: "data"
  top: "label"
  top: "bbox"
  top: "landmark"
  input_param { shape: { dim: 48 dim: 3 dim: 24 dim: 24 } }
  
  label_param { shape: { dim: 48 dim: 2 dim: 24 dim: 24 } }
 
  bbox_param { shape: { dim: 48 dim: 4 } }
  
  landmark_param { shape: { dim: 48 dim: 10 } }
  
}


# conv1

layer {
  name: "conv1/3x3_s1"
  type: "Convolution"
  bottom: "data"
  top: "conv1/3x3_s1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 3
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "conv1/PreLu_3x3"
  type: "PreLu"
  bottom: "conv1/3x3_s1"
  top: "conv1/3x3_s1"
}

layer {
  name: "pool1/2x2_s2"
  type: "Pooling"
  bottom: "conv1/3x3_s1"
  top: "pool1/2x2_s2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}



#conv2
layer {
  name: "conv2/3x3_s1"
  type: "Convolution"
  bottom: "pool1/2x2_s2"
  top: "conv2/3x3_s1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "conv2/PreLu_3x3"
  type: "PreLu"
  bottom: "conv2/3x3_s1"
  top: "conv2/3x3_s1"
}


# pool2 

layer {
  name: "pool2/2x2_s2"
  type: "Pooling"
  bottom: "conv2/3x3_s1"
  top: "pool2/2x2_s2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}




#conv3

layer {
  name: "conv3/3x3_s1"
  type: "Convolution"
  bottom: "pool2/2x2_s2"
  top: "conv3/3x3_s1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 2
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "conv3/PreLu_2x2"
  type: "PreLu"
  bottom: "conv3/3x3_s1"
  top: "conv3/3x3_s1"
}


#pool3 
layer {
  name: "pool3/2x2_s2"
  type: "Pooling"
  bottom: "conv3/3x3_s1"
  top: "pool3/2x2_s2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}


# conv4
layer {
  name: "conv4/2x2_s1"
  type: "Convolution"
  bottom: "pool3/2x2_s2"
  top: "conv4/2x2_s1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 2
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "conv4/PreLu_2x2"
  type: "PreLu"
  bottom: "conv4/2x2_s1"
  top: "conv4/2x2_s1"
}

#f1
layer {
  name: "fc"
  type: "InnerProduct"
  bottom: "conv4/2x2_s1"
  top: "fc"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  inner_product_param {
    num_output: 256
    weight_filler {
      type: "xavier"
	}
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}





layer {
  name: "fc_1"
  type: "InnerProduct"
  bottom: "fc"
  top: "fc_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
	}
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "fc_1/Softmax"
  type: "Softmax"
  bottom: "fc_1"
  top: "fc_1"
}



layer {
  name: "fc_2"
  type: "InnerProduct"
  bottom: "fc"
  top: "fc_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  inner_product_param {
    num_output: 4
    weight_filler {
      type: "xavier"
	}
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}



layer {
  name: "fc_3"
  type: "InnerProduct"
  bottom: "fc"
  top: "fc_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
	}
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}


layer {
  name: "cls_loss"
  type: "SoftmaxWithLoss"
  bottom: "fc_1"
  bottom: "label"
  top: "cls_loss"
}

layer {
  name: "cls_Acc"
  type: "Softmax"
  bottom: "fc_1"
  bottom: "label"
  top: "cls_acc"
}


layer {
  name: "bbox_loss"
  type: "MTCNNEuclideanLoss"
  bottom: "fc_2"
  bottom: "bbox"
  top: "bbox_loss"
}

layer {
  name: "landmark_loss"
  type: "MTCNNEuclideanLoss"
  bottom: "fc_3"
  bottom: "landmark"
  top: "landmark_loss"
}


